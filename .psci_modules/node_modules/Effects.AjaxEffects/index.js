"use strict";
var Prelude = require("Prelude");
var Data_Either = require("Data.Either");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Control_Monad_Eff_Console = require("Control.Monad.Eff.Console");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("Control.Monad.Error.Class");
var Control_Monad_Aff = require("Control.Monad.Aff");
var Network_HTTP_Affjax = require("Network.HTTP.Affjax");
var Data_HTTP_Method = require("Data.HTTP.Method");
var Network_HTTP_Affjax_Response = require("Network.HTTP.Affjax.Response");
var Data_Argonaut_Core = require("Data.Argonaut.Core");
var Data_RxState = require("Data.RxState");
var Model = require("Model");
var ActionsEffects = require("ActionsEffects");
var Channels = require("Channels");
var Network_HTTP_Affjax_Request = require("Network.HTTP.Affjax.Request");
var rootUrl = "http://reduxblog.herokuapp.com/api/posts";
var apiKey = "?key=8237rahsfoiuh";
var fetchPosts = (function () {
    var rUrl = rootUrl + apiKey;
    return Control_Monad_Aff.runAff(function (v) {
        return Data_RxState.send([ ActionsEffects.NoOp.value ])(Channels.actionsChannel);
    })(function (resp) {
        var ePosts = Model.decodeBlogPostArray(resp.response);
        if (ePosts instanceof Data_Either.Left) {
            return Control_Monad_Eff_Console.log("An error occurred");
        };
        if (ePosts instanceof Data_Either.Right) {
            return Data_RxState.send([ new ActionsEffects.SetPosts(ePosts.value0) ])(Channels.actionsChannel);
        };
        throw new Error("Failed pattern match at Effects.AjaxEffects line 34, column 17 - line 36, column 75: " + [ ePosts.constructor.name ]);
    })(Network_HTTP_Affjax.affjax(Network_HTTP_Affjax_Request.requestableUnit)(Network_HTTP_Affjax_Response.responsableJson)((function () {
        var $5 = {};
        for (var $6 in Network_HTTP_Affjax.defaultRequest) {
            if (Network_HTTP_Affjax.defaultRequest.hasOwnProperty($6)) {
                $5[$6] = Network_HTTP_Affjax.defaultRequest[$6];
            };
        };
        $5.url = rUrl;
        return $5;
    })()));
})();
module.exports = {
    fetchPosts: fetchPosts, 
    apiKey: apiKey, 
    rootUrl: rootUrl
};
