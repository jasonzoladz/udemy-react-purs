"use strict";
var Prelude = require("Prelude");
var Control_Monad_Eff_Exception = require("Control.Monad.Eff.Exception");
var Data_Validation = require("Data.Validation");
var Data_String = require("Data.String");
var Model = require("Model");

/**
 * validateNewPostForm :: BlogPost -> V (Array Error) BlogPost
 */
var validateNewPostForm = function (v) {
    var validateNonEmpty = function (str) {
        var $2 = Data_String.length(str) > 0;
        if ($2) {
            return Prelude.pure(Data_Validation.applicativeV(Prelude.semigroupString))(str);
        };
        if (!$2) {
            return Data_Validation.invalid("must be non empty");
        };
        throw new Error("Failed pattern match at Validators line 20, column 9 - line 22, column 22: " + [ $2.constructor.name ]);
    };
    return Prelude["<*>"](Data_Validation.applyV(Prelude.semigroupString))(Prelude["<*>"](Data_Validation.applyV(Prelude.semigroupString))(Prelude["<*>"](Data_Validation.applyV(Prelude.semigroupString))(Prelude["<$>"](Data_Validation.functorV)(function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return {
                        id: a, 
                        title: b, 
                        categories: c, 
                        content: d
                    };
                };
            };
        };
    })(Prelude.pure(Data_Validation.applicativeV(Prelude.semigroupString))(v.id)))(validateNonEmpty(v.title)))(validateNonEmpty(v.categories)))(validateNonEmpty(v.content));
};
module.exports = {
    validateNewPostForm: validateNewPostForm
};
