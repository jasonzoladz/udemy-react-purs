"use strict";
var $foreign = require("./foreign");
var Prelude = require("Prelude");
var Control_Monad_Eff = require("Control.Monad.Eff");
var Data_Foldable = require("Data.Foldable");
var $less$tilde = $foreign._map;
var startApp = function (dictFoldable) {
    return function (updateFunction) {
        return function (effectFunction) {
            return function (renderFunction) {
                return function (actionChan) {
                    return function (effectChan) {
                        return function (initState) {
                            var updateMany = function (dictFoldable1) {
                                return function (f) {
                                    return function (xs) {
                                        return function (s) {
                                            return Data_Foldable.foldl(dictFoldable1)(f)(s)(xs);
                                        };
                                    };
                                };
                            };
                            var effectsMany = function (f) {
                                return Data_Foldable.traverse_(Control_Monad_Eff.applicativeEff)(dictFoldable)(f);
                            };
                            var stateChannel = $foreign.foldp(updateMany(dictFoldable)(updateFunction))(initState)(actionChan);
                            return function __do() {
                                $foreign.subscribe(stateChannel)(function (state) {
                                    return function __do() {
                                        var v = renderFunction(state)();
                                        return Prelude.unit;
                                    };
                                })();
                                return $foreign.subscribe(effectChan)(effectsMany(effectFunction))();
                            };
                        };
                    };
                };
            };
        };
    };
};
var functorChannel = new Prelude.Functor($foreign._map);
var applyChannel = new Prelude.Apply(function () {
    return functorChannel;
}, $foreign.combineLatest(Prelude.id(Prelude.categoryFn)));
var observableChannel = new Prelude.Bind(function () {
    return applyChannel;
}, $foreign.flatMap);
var applicativeChannel = new Prelude.Applicative(function () {
    return applyChannel;
}, $foreign.just);
var monadChannel = new Prelude.Monad(function () {
    return applicativeChannel;
}, function () {
    return observableChannel;
});
module.exports = {
    startApp: startApp, 
    "<~": $less$tilde, 
    functorChannel: functorChannel, 
    applyChannel: applyChannel, 
    applicativeChannel: applicativeChannel, 
    observableChannel: observableChannel, 
    monadChannel: monadChannel, 
    take: $foreign.take, 
    combineLatest: $foreign.combineLatest, 
    flatMap: $foreign.flatMap, 
    just: $foreign.just, 
    filter: $foreign.filter, 
    _map: $foreign._map, 
    merge: $foreign.merge, 
    subscribe: $foreign.subscribe, 
    foldp: $foreign.foldp, 
    send: $foreign.send, 
    newChannel: $foreign.newChannel
};
